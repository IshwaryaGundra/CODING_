# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def reverseList(self, head):
        stack = []
        """
        :type head: ListNode
        :rtype: ListNode
        temp=head
        prev=None """
      """
        #without using any data structure TIME COMPLEXITY-O(2N) SC-O(1)
        while(temp!=None):
            new=temp.next
            temp.next=prev
            prev=temp
            temp=new
        return prev """
        #with using any data structure TIME COMPLEXITY-O(2N) SC-O(N    )
        temp=head
        while(temp!=None):
            stack.append(temp.val)
            temp=temp.next
        temp=head
        while(temp!=None):
            temp.val=stack.pop()
            temp=temp.next
        return head

